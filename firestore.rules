rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection rules
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Posts collection rules
    match /posts/{postId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // Chats collection rules
    match /chats/{chatId} {
      allow read: if request.auth != null && request.auth.uid in resource.data.participants;
      allow write: if request.auth != null && request.auth.uid in resource.data.participants;
    }

    // Notifications collection rules
    match /notifications/{notificationId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
        (resource.data.toUserId == request.auth.uid || 
         resource.data.fromUserId == request.auth.uid);
      allow delete: if request.auth != null && 
        (resource.data.toUserId == request.auth.uid || 
         resource.data.fromUserId == request.auth.uid);
    }

    // Add these new rules for calls
    match /calls/{callId} {
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.callerUid || 
        request.auth.uid == resource.data.receiverUid
      );
      allow create: if request.auth != null && (
        request.auth.uid == request.resource.data.callerUid || 
        request.auth.uid == request.resource.data.receiverUid
      );
      allow update: if request.auth != null && (
        request.auth.uid == resource.data.callerUid || 
        request.auth.uid == resource.data.receiverUid
      );
      allow delete: if request.auth != null && (
        request.auth.uid == resource.data.callerUid || 
        request.auth.uid == resource.data.receiverUid
      );
    }
  }
} 